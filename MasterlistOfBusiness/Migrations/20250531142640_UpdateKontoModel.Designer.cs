// <auto-generated />
using System;
using MasterlistOfBusiness.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterlistOfBusiness.Migrations
{
    [DbContext(typeof(MOBContext))]
    [Migration("20250531142640_UpdateKontoModel")]
    partial class UpdateKontoModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("MasterlistOfBusiness.Models.Konto", b =>
                {
                    b.Property<int>("id_konta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NazwaUzytkownika")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Platforma")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sprzedawcaid_sprzedawcy")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("id_sprzedawcy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("link")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("id_konta");

                    b.HasIndex("Sprzedawcaid_sprzedawcy");

                    b.ToTable("Konto");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Produkt", b =>
                {
                    b.Property<int>("id_produktu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kontoid_konta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cena")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_konta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ilosc")
                        .HasColumnType("INTEGER");

                    b.Property<string>("opis")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("typ")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("id_produktu");

                    b.HasIndex("Kontoid_konta");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Sprzedawca", b =>
                {
                    b.Property<int>("id_sprzedawcy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UzytkownikLogin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_sprzedawcy");

                    b.HasIndex("UzytkownikLogin");

                    b.ToTable("Sprzedawca");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Transakcja", b =>
                {
                    b.Property<int>("id_transakcji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_konta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_produktu")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_transakcji");

                    b.ToTable("Transakcja");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Uzytkownik", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("TEXT");

                    b.Property<string>("HasloHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("typ")
                        .HasColumnType("TEXT");

                    b.HasKey("login");

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("ProduktTransakcja", b =>
                {
                    b.Property<int>("Produktyid_produktu")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Transakcjeid_transakcji")
                        .HasColumnType("INTEGER");

                    b.HasKey("Produktyid_produktu", "Transakcjeid_transakcji");

                    b.HasIndex("Transakcjeid_transakcji");

                    b.ToTable("ProduktTransakcja");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Konto", b =>
                {
                    b.HasOne("MasterlistOfBusiness.Models.Sprzedawca", "Sprzedawca")
                        .WithMany("Konta")
                        .HasForeignKey("Sprzedawcaid_sprzedawcy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sprzedawca");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Produkt", b =>
                {
                    b.HasOne("MasterlistOfBusiness.Models.Konto", "Konto")
                        .WithMany("Produkty")
                        .HasForeignKey("Kontoid_konta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konto");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Sprzedawca", b =>
                {
                    b.HasOne("MasterlistOfBusiness.Models.Uzytkownik", "Uzytkownik")
                        .WithMany("Sprzedawca")
                        .HasForeignKey("UzytkownikLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("ProduktTransakcja", b =>
                {
                    b.HasOne("MasterlistOfBusiness.Models.Produkt", null)
                        .WithMany()
                        .HasForeignKey("Produktyid_produktu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterlistOfBusiness.Models.Transakcja", null)
                        .WithMany()
                        .HasForeignKey("Transakcjeid_transakcji")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Konto", b =>
                {
                    b.Navigation("Produkty");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Sprzedawca", b =>
                {
                    b.Navigation("Konta");
                });

            modelBuilder.Entity("MasterlistOfBusiness.Models.Uzytkownik", b =>
                {
                    b.Navigation("Sprzedawca");
                });
#pragma warning restore 612, 618
        }
    }
}
